name: Deploy to Linode Compute Instance

on:
  push:
    branches: ["master"]

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install modules
        run: yarn
      - name: Run eslint
        run: yarn lint
      - name: Run Tests
        run: yarn test:ci

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push to DockerHub
        uses: docker/build-push-action@v3
        with:
          build-args: |
            NEXT_PUBLIC_AUTH0_DOMAIN=${{ secrets.NEXT_PUBLIC_AUTH0_DOMAIN }}
            NEXT_PUBLIC_AUTH0_CLIENT_ID=${{ secrets.NEXT_PUBLIC_AUTH0_CLIENT_ID }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ra-yoga:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull and Run Docker Image on Linode Remote Server
        uses: appleboy/ssh-action@master
        env:
          HOST_PORT: ${{ secrets.HOST_PORT }}
          NEXT_PUBLIC_AUTH0_DOMAIN: ${{ secrets.NEXT_PUBLIC_AUTH0_DOMAIN }}
          NEXT_PUBLIC_AUTH0_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_AUTH0_CLIENT_ID }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }} 
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: HOST_PORT,NEXT_PUBLIC_AUTH0_DOMAIN,NEXT_PUBLIC_AUTH0_CLIENT_ID
          script: |
            export envArray=( $HOST_PORT $NEXT_PUBLIC_AUTH0_DOMAIN $NEXT_PUBLIC_AUTH0_CLIENT_ID ) \
            && docker pull dangroleau/ra-yoga \
            && if [[ -z $(docker container ls -a | grep "ra-yoga") ]]; \
            then echo "No container found. Starting ra-yoga container..."; \
            else docker stop ra-yoga && docker rm ra-yoga; \
            fi \
            && docker run -d -p "${envArray[0]}":3000 --name ra-yoga --restart always \
            -e NEXT_PUBLIC_AUTH0_DOMAIN="${envArray[1]}" \
            -e NEXT_PUBLIC_AUTH0_CLIENT_ID="${envArray[2]}" \
            dangroleau/ra-yoga \
            && exit \
            && exit 0;
